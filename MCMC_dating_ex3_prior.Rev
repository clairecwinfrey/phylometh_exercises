#RevBayes tutorials: Molecular dating: MCMC_dating_ex3_prior.Rev
#Exercise 3: Estimating speciation times using node dating
#March 1, 2020

#This script is master Rev file that loads the data, the files specifying diff.
#model components, and the monitors to record the output and the MCMC sampler.


setwd("/Users/clairewinfrey/Desktop/Spring_2020/Phylometh_2020/RevBayes")

cytb <-cytb <- readDiscreteCharacterData("tutorial_data/bears_cytb.nex")
n_taxa <- cytb.size()
taxa <- cytb.taxa()

#Create workspace variables to contain all MCMC moves & monitors
moves    = VectorMoves()
monitors = VectorMonitors() #I think that this needs to stay same as in Ex. 1.

#Setting up the MCMC
#source is a function that lets you load commands and then Rev files into the
#workspace.

source("scripts/tree_BD_nodedate.Rev") # BD tree prior
source("scripts/clock_relaxed_exponential.Rev") # the relaxed exp. clock model
source("scripts/sub_GTRG.Rev") # the GTR model

#create workspace model variable. Mymodel object is a wrapper around entire model
#graph and allows us to pass model to various functions we need for our MCMC.
mymodel = model(sf)

#Specify monitors and output file names. This monitor will all be numerical para-
#meters that and will be written to tab-separated text file (can be opened by
#accessory programs...e.g. Tracer?).

monitors.append( mnModel(filename="output/bears_nodedate_prior.log", printgen=10) )
#monitors.append( mnFile(filename="output/bears_nodedate.trees", printgen=10, timetree) )
#commented out for this exercise because we are not summarizing the trees.

#This monitor.append was left unchanged from Ex. 1
#This final monitor prints information to the screen using mnScreen.
#We'll go with age of living bears (extant_mrca) and the diversification rate.
monitors.append( mnScreen(printgen=10, extant_mrca, diversification, branch_rates) )
#I think that this one stays the same as Ex 1.

#Now, we set up a separate workspace variable that defines our MCMC run. To do
#this, we use mcmc function and provide as arguments the three main analysis
#components (our model, our monitors, and our moves).

mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")

#Here, we specify that our chain length is 20000 cycles.
mymcmc.run(generations=20000, underPrior=TRUE)

trace = readTreeTrace("output/bears_nodedate_run_1.trees")
#commented out for this exercise

#mccTree(trace, file="output/bears_nodedate.mcc.tre" )
#commented out for this exercise

q()
